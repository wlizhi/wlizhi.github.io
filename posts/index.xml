<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>所有文章 - 暗夜零星</title>
        <link>https://wlizhi.cc/posts/</link>
        <description>所有文章 | 暗夜零星</description>
        <generator>Hugo -- gohugo.io</generator><managingEditor>wlizhicc@163.com (Wlizhi)</managingEditor>
            <webMaster>wlizhicc@163.com (Wlizhi)</webMaster><lastBuildDate>Sat, 05 Dec 2020 09:49:50 &#43;0800</lastBuildDate><atom:link href="https://wlizhi.cc/posts/" rel="self" type="application/rss+xml" /><item>
    <title>15 声明式事务七种传播行为的表现形式案例</title>
    <link>https://wlizhi.cc/posts/spring/15-transaction-propagation-example/</link>
    <pubDate>Sat, 05 Dec 2020 09:49:50 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://wlizhi.cc/posts/spring/15-transaction-propagation-example/</guid>
    <description><![CDATA[spring声明式事务的传播行为，严格来说是spring特有的，数据库本身并没有这个概念。本文会列举出spring事务其中传播行为，以案例的方式展示不同的传播行为的表现是怎样的。]]></description>
</item><item>
    <title>14 声明式事务中XML配置及注解方式的注册入口</title>
    <link>https://wlizhi.cc/posts/spring/14-transaction-xml-annotation-registry/</link>
    <pubDate>Thu, 03 Dec 2020 11:06:30 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://wlizhi.cc/posts/spring/14-transaction-xml-annotation-registry/</guid>
    <description><![CDATA[事务以xml配置方式使用时，xml是怎么解析，并将事务功能注册到容器中的？注解方式启动时，是怎么扫描注解将事务功能注册到容器中的？本文给出了详细的解析。]]></description>
</item><item>
    <title>13 AOP MethodInterceptor执行原理</title>
    <link>https://wlizhi.cc/posts/spring/13-aop-method-interceptor-execute/</link>
    <pubDate>Wed, 02 Dec 2020 10:11:35 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://wlizhi.cc/posts/spring/13-aop-method-interceptor-execute/</guid>
    <description><![CDATA[AOP中代理方法执行时，自定义切面通知方法的MethodInterceptor执行原理解析。]]></description>
</item><item>
    <title>12 AOP 执行链的创建和执行原理</title>
    <link>https://wlizhi.cc/posts/spring/12-aop-proxy-execute-processor/</link>
    <pubDate>Tue, 01 Dec 2020 20:34:31 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://wlizhi.cc/posts/spring/12-aop-proxy-execute-processor/</guid>
    <description><![CDATA[AOP 中代理对象生成后，在调用代理方法时，以 JDK 动态代理为例，执行链的生成、执行链火炬传递式的调用源码解析。]]></description>
</item><item>
    <title>11 AOP 代理实例的创建</title>
    <link>https://wlizhi.cc/posts/spring/11-aop-proxy-create-processor/</link>
    <pubDate>Tue, 01 Dec 2020 13:48:59 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://wlizhi.cc/posts/spring/11-aop-proxy-create-processor/</guid>
    <description><![CDATA[AOP 代理实例的创建]]></description>
</item><item>
    <title>10 AOP Advisor的封装与搜集</title>
    <link>https://wlizhi.cc/posts/spring/10-aop-advisor-collect/</link>
    <pubDate>Mon, 30 Nov 2020 18:01:17 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://wlizhi.cc/posts/spring/10-aop-advisor-collect/</guid>
    <description><![CDATA[AOP Advisor 的搜集]]></description>
</item><item>
    <title>09 AOP AbstractAutoProxyCreator的注册</title>
    <link>https://wlizhi.cc/posts/spring/09-aop-support-register/</link>
    <pubDate>Sun, 29 Nov 2020 19:04:06 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://wlizhi.cc/posts/spring/09-aop-support-register/</guid>
    <description><![CDATA[AOP - AbstractAutoProxyCreator的注册流程解析]]></description>
</item><item>
    <title>08 ConfigurationClassPostProcessor源码解析</title>
    <link>https://wlizhi.cc/posts/spring/08-configuration-class-post-processor/</link>
    <pubDate>Sun, 29 Nov 2020 10:11:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://wlizhi.cc/posts/spring/08-configuration-class-post-processor/</guid>
    <description><![CDATA[这个 BeanDefinitionRegistryPostProcessor 的实现类 ConfigurationClassPostProcessor 很重要，有必要单独列举一下。]]></description>
</item><item>
    <title>07 复杂对象的构建方式 - FactoryBean</title>
    <link>https://wlizhi.cc/posts/spring/07-factory-bean/</link>
    <pubDate>Sat, 28 Nov 2020 14:26:12 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://wlizhi.cc/posts/spring/07-factory-bean/</guid>
    <description><![CDATA[介绍FactoryBean的使用方法和FactoryBean在Spring中的实现原理，执行流程。]]></description>
</item><item>
    <title>06 循环依赖的实现原理</title>
    <link>https://wlizhi.cc/posts/spring/06-cyclic-dependence/</link>
    <pubDate>Fri, 27 Nov 2020 19:23:40 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://wlizhi.cc/posts/spring/06-cyclic-dependence/</guid>
    <description><![CDATA[本章着重介绍了spring中在多个bean有相互依赖关系时，是怎么样进行依赖注入的。]]></description>
</item></channel>
</rss>
