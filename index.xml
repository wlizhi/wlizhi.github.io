<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>暗夜零星</title>
        <link>https://wlizhi.cc/</link>
        <description>暗夜零星，java程序员。这里是我的个人博客，交流技术，分享经验。</description>
        <generator>Hugo -- gohugo.io</generator><managingEditor>wlizhicc@163.com (Wlizhi)</managingEditor>
            <webMaster>wlizhicc@163.com (Wlizhi)</webMaster><lastBuildDate>Thu, 17 Dec 2020 10:09:53 &#43;0800</lastBuildDate>
            <atom:link href="https://wlizhi.cc/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>27 DispatcherServlet具体业务方法的调用</title>
    <link>https://wlizhi.cc/posts/spring/27-dispatcher-servlet-handler-adapter-handle/</link>
    <pubDate>Thu, 17 Dec 2020 10:09:53 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://wlizhi.cc/posts/spring/27-dispatcher-servlet-handler-adapter-handle/</guid>
    <description><![CDATA[DispatcherServlet.doDispatch()中，具体业务方法是通过HandlerAdapter.handle()来调用的，本文性详细列举handle()的实现流程。]]></description>
</item><item>
    <title>26 DispatcherServlet 处理请求的核心流程</title>
    <link>https://wlizhi.cc/posts/spring/26-dispatcher-servlet-core-process/</link>
    <pubDate>Wed, 16 Dec 2020 19:30:41 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://wlizhi.cc/posts/spring/26-dispatcher-servlet-core-process/</guid>
    <description><![CDATA[在 springmvc 中，所有的请求都会交给 DispatcherServlet 处理，由 DispatcherServlet 分发给下游组件，进行具体的处理。本文详细罗列出 DispatcherServlet 在处理请求时的核心流程，源码的流转。]]></description>
</item><item>
    <title>25 RequestMappingHandlerMapping和RequestMappingHandlerAdapter初始化</title>
    <link>https://wlizhi.cc/posts/spring/25-request-mapping-and-adapter-init/</link>
    <pubDate>Wed, 16 Dec 2020 17:11:54 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://wlizhi.cc/posts/spring/25-request-mapping-and-adapter-init/</guid>
    <description><![CDATA[在@EnableWebMvc注解，激活mvc的一些组件时，其中就创建了 RequestMappingHandlerMapping 和 RequestMappingHandlerAdapter。这两个类也是 InitializingBean 的实现，所以在创建后会调用 afterPropertiesSet() 初始化。]]></description>
</item><item>
    <title>Spring缓存管理器多级缓存的实现</title>
    <link>https://wlizhi.cc/posts/spring/layering-cache/</link>
    <pubDate>Wed, 16 Dec 2020 00:07:13 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://wlizhi.cc/posts/spring/layering-cache/</guid>
    <description><![CDATA[<p>大概今年9月份，在对接抖音抖店 api 时，写的一个多级缓存的实现，本地缓存基于guava。如果需要使用，直接将这些类copy过去就可以。或者这些类抽取到单独的模块，自定义一个 autoconfigurer、start包，就可以无缝整合到 springboot，导包即可自动配置。</p>]]></description>
</item><item>
    <title>24 DispatcherServlet的初始化</title>
    <link>https://wlizhi.cc/posts/spring/24-dispatcher-servlet-init/</link>
    <pubDate>Tue, 15 Dec 2020 22:41:32 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://wlizhi.cc/posts/spring/24-dispatcher-servlet-init/</guid>
    <description><![CDATA[DispatcherServlet的初始化的初始化源码分析。包括 handlerMapping、handlerAdapter等的初始化设置。]]></description>
</item><item>
    <title>23 @EnableWebMvc 的作用及源码分析</title>
    <link>https://wlizhi.cc/posts/spring/23-enable-web-mvc-principle/</link>
    <pubDate>Tue, 15 Dec 2020 20:27:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://wlizhi.cc/posts/spring/23-enable-web-mvc-principle/</guid>
    <description><![CDATA[注解@EnableWebMvc的实现原理，这个注解中主流程源码分析。]]></description>
</item><item>
    <title>22 MVC的支持入口及嵌入式Tomcat的使用</title>
    <link>https://wlizhi.cc/posts/spring/22-enable-web-mvc-main-embedded-tomcat/</link>
    <pubDate>Tue, 15 Dec 2020 10:51:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://wlizhi.cc/posts/spring/22-enable-web-mvc-main-embedded-tomcat/</guid>
    <description><![CDATA[MVC的支持、执行入口及嵌入式 Tomcat 的使用案例。]]></description>
</item><item>
    <title>向spring提交了一个issue</title>
    <link>https://wlizhi.cc/posts/spring/an-issue-for-spring/</link>
    <pubDate>Fri, 11 Dec 2020 12:47:01 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://wlizhi.cc/posts/spring/an-issue-for-spring/</guid>
    <description><![CDATA[<p>昨天给spring提了一个issue，这个问题在 <a href="https://wlizhi.cc/posts/spring/16-transaction-declare-attention/" target="_blank" rel="noopener noreffer">声明式事务注意事项</a> 中有描述过。</p>]]></description>
</item><item>
    <title>21 web容器启动时ServletContainerInitializer的加载</title>
    <link>https://wlizhi.cc/posts/spring/21-load-servlet-container-initializer-on-startup/</link>
    <pubDate>Thu, 10 Dec 2020 19:32:37 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://wlizhi.cc/posts/spring/21-load-servlet-container-initializer-on-startup/</guid>
    <description><![CDATA[在web容器启动时为提供给第三方组件机会做一些初始化的工作，例如注册 servlet 或者 filter 等，servlet 规范中通过 ServletContainerInitializer 实现此功能。]]></description>
</item><item>
    <title>20 声明式事务扩展 TransactionSynchronization</title>
    <link>https://wlizhi.cc/posts/spring/20-transaction-extention-transaction-synchronization/</link>
    <pubDate>Mon, 07 Dec 2020 14:14:56 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://wlizhi.cc/posts/spring/20-transaction-extention-transaction-synchronization/</guid>
    <description><![CDATA[事务提交前后是可以自定义一些逻辑，嵌入到事务提交的流程中的，通过spring-tx包提供的TransactionSynchronization类、使用TransactionSynchronizationManager的静态方法registerSynchronization() 或者使用注解方式均可。]]></description>
</item></channel>
</rss>
