<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>spring源码 - 标签 - 暗夜零星</title>
        <link>https://wlizhi.cc/tags/spring%E6%BA%90%E7%A0%81/</link>
        <description>spring源码 - 标签 - 暗夜零星</description>
        <generator>Hugo -- gohugo.io</generator><managingEditor>wlizhicc@163.com (Wlizhi)</managingEditor>
            <webMaster>wlizhicc@163.com (Wlizhi)</webMaster><lastBuildDate>Tue, 01 Dec 2020 13:48:59 &#43;0800</lastBuildDate><atom:link href="https://wlizhi.cc/tags/spring%E6%BA%90%E7%A0%81/" rel="self" type="application/rss+xml" /><item>
    <title>11 AOP 代理实例的创建</title>
    <link>https://wlizhi.cc/posts/spring/11-aop-proxy-create-processor/</link>
    <pubDate>Tue, 01 Dec 2020 13:48:59 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://wlizhi.cc/posts/spring/11-aop-proxy-create-processor/</guid>
    <description><![CDATA[AOP 代理实例的创建]]></description>
</item><item>
    <title>10 AOP - Advisor的封装与搜集</title>
    <link>https://wlizhi.cc/posts/spring/10-aop-advisor-collect/</link>
    <pubDate>Mon, 30 Nov 2020 18:01:17 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://wlizhi.cc/posts/spring/10-aop-advisor-collect/</guid>
    <description><![CDATA[AOP Advisor 的搜集]]></description>
</item><item>
    <title>09 AOP - AbstractAutoProxyCreator的注册</title>
    <link>https://wlizhi.cc/posts/spring/09-aop-support-register/</link>
    <pubDate>Sun, 29 Nov 2020 19:04:06 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://wlizhi.cc/posts/spring/09-aop-support-register/</guid>
    <description><![CDATA[AOP - AbstractAutoProxyCreator的注册流程解析]]></description>
</item><item>
    <title>08 ConfigurationClassPostProcessor源码解析</title>
    <link>https://wlizhi.cc/posts/spring/08-configuration-class-post-processor/</link>
    <pubDate>Sun, 29 Nov 2020 10:11:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://wlizhi.cc/posts/spring/08-configuration-class-post-processor/</guid>
    <description><![CDATA[这个 BeanDefinitionRegistryPostProcessor 的实现类 ConfigurationClassPostProcessor 很重要，有必要单独列举一下。]]></description>
</item><item>
    <title>07 复杂对象的构建方式 - FactoryBean</title>
    <link>https://wlizhi.cc/posts/spring/07-factory-bean/</link>
    <pubDate>Sat, 28 Nov 2020 14:26:12 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://wlizhi.cc/posts/spring/07-factory-bean/</guid>
    <description><![CDATA[介绍FactoryBean的使用方法和FactoryBean在Spring中的实现原理，执行流程。]]></description>
</item><item>
    <title>06 循环依赖的实现原理</title>
    <link>https://wlizhi.cc/posts/spring/06-cyclic-dependence/</link>
    <pubDate>Fri, 27 Nov 2020 19:23:40 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://wlizhi.cc/posts/spring/06-cyclic-dependence/</guid>
    <description><![CDATA[本章着重介绍了spring中在多个bean有相互依赖关系时，是怎么样进行依赖注入的。]]></description>
</item><item>
    <title>05 Bean实例化整体流程</title>
    <link>https://wlizhi.cc/posts/spring/05-spring-ioc-init/</link>
    <pubDate>Thu, 26 Nov 2020 12:26:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://wlizhi.cc/posts/spring/05-spring-ioc-init/</guid>
    <description><![CDATA[详细解读spring中bean的实例化流程，由于篇幅原因，循环依赖、一些流程节点的详细解析在后续文章中讨论。]]></description>
</item><item>
    <title>04 BeanPostProcessor的注册</title>
    <link>https://wlizhi.cc/posts/spring/04-registry-of-bean-post-processor/</link>
    <pubDate>Tue, 24 Nov 2020 11:05:21 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://wlizhi.cc/posts/spring/04-registry-of-bean-post-processor/</guid>
    <description><![CDATA[spring容器启动过程中，在创建BeanFactory、搜集BeanDefinition、实例化并调用BeanFactoryPostProcessor之后，会对BeanPostProcessor进行注册。]]></description>
</item><item>
    <title>03 BeanFactoryPostProcessor的注册与执行</title>
    <link>https://wlizhi.cc/posts/spring/03-bean-factory-post-processor-registry-and-execute/</link>
    <pubDate>Tue, 24 Nov 2020 09:14:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://wlizhi.cc/posts/spring/03-bean-factory-post-processor-registry-and-execute/</guid>
    <description><![CDATA[spring ioc容器初始化时，首先创建BeanFactory对象，搜集BeanDefinition，在完成之后，会优先先实例化BeanDefinitionRegistryPostProcessor和BeanFactoryPostProcessor，并调用postProcessBeanDefinitionRegistry()、postProcessBeanFactory()方法]]></description>
</item><item>
    <title>02 Spring标签解析-BeanDefinitionParser</title>
    <link>https://wlizhi.cc/posts/spring/02-spring-tag-parse-bean-definition-parser/</link>
    <pubDate>Mon, 23 Nov 2020 11:20:12 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://wlizhi.cc/posts/spring/02-spring-tag-parse-bean-definition-parser/</guid>
    <description><![CDATA[记录spring标签解析中，对标签属性解析的几个典型BeanDefinitionParser实现。]]></description>
</item></channel>
</rss>
